{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/src/lib/jQuery.js","webpack:///./node_modules/sticky-sidebar/src/sticky-sidebar.js","webpack:///./apps/src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","window","Error","EVENT_KEY","DEFAULTS","StickySidebar","topSpacing","bottomSpacing","containerSelector","innerWrapperSelector","stickyClass","resizeSensor","minWidth","sidebar","options","this","extend","document","querySelector","sidebarInner","container","parentElement","affixedType","direction","support","transform","transform3d","_initialized","_reStyle","_breakpoint","_resizeListeners","dimensions","translateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","containerHeight","viewportHeight","viewportTop","lastViewportTop","forEach","method","initialize","result","upper","charAt","toUpperCase","slice","style","createElement","join","split","undefined","element","eventName","data","event","CustomEvent","detail","e","createEvent","initCustomEvent","dispatchEvent","defaults","results","left","top","offsetTop","offsetLeft","isNaN","tagName","offsetParent","className","hasClass","classList","add","remove","replace","RegExp","contains","test","_setSupportFeatures","wrapper","setAttribute","appendChild","firstChild","containers","querySelectorAll","Array","item","length","parseInt","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","addEventListener","passive","capture","ResizeSensor","handleEvent","updateSticky","dims","offsetRelative","clientHeight","containerBottom","offsetHeight","offsetWidth","innerHeight","_calcDimensionsWithScroll","sidebarLeft","documentElement","scrollTop","body","viewportBottom","viewportLeft","scrollLeft","furthest","Math","min","max","affixType","sidebarBottom","colliderTop","colliderBottom","isSidebarFitsViewport","inner","outer","position","width","bottom","translate","_getTranslate","height","force","getAffixType","_getStyle","affixEvent","toLowerCase","eventTrigger","removeClass","addClass","_unit","affixedEvent","innerWidth","removeAttribute","eventType","_running","type","requestAnimationFrame","observeScrollDir","supportTransform","y","x","z","removeEventListener","caption","minHeight","styleReset","detach","$","ready","sideNavContainer","sideNavMain","dataset","topspacing","bottomspacing","initializeStickySidebar"],"mappings":"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","file":"apps/build/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 66);\n","const { jQuery } = window;\nif (!jQuery) {\n  throw new Error(\n    \"SGDS couldn't initialize; please make sure jQuery is loaded!\"\n  );\n}\nexport default jQuery;","/**\r\n * Sticky Sidebar JavaScript Plugin.\r\n * @version 3.3.1\r\n * @author Ahmed Bouhuolia <a.bouhuolia@gmail.com>\r\n * @license The MIT License (MIT)\r\n */\r\nconst StickySidebar = (() => {\r\n  \r\n    // ---------------------------------\r\n    // # Define Constants\r\n    // ---------------------------------\r\n    //\r\n    const EVENT_KEY = '.stickySidebar';\r\n    const VERSION   = '3.3.1';\r\n  \r\n    const DEFAULTS = {\r\n      \r\n      /**\r\n       * Additional top spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      topSpacing: 0,\r\n  \r\n      /**\r\n       * Additional bottom spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      bottomSpacing: 0,\r\n  \r\n      /**\r\n       * Container sidebar selector to know what the beginning and end of sticky element.\r\n       * @type {String|False}\r\n       */\r\n      containerSelector: false,\r\n  \r\n      /**\r\n       * Inner wrapper selector.\r\n       * @type {String}\r\n       */\r\n      innerWrapperSelector: '.inner-wrapper-sticky',\r\n  \r\n      /**\r\n       * The name of CSS class to apply to elements when they have become stuck.\r\n       * @type {String|False}\r\n       */\r\n      stickyClass: 'is-affixed',\r\n  \r\n      /**\r\n       * Detect when sidebar and its container change height so re-calculate their dimensions.\r\n       * @type {Boolean}\r\n       */\r\n      resizeSensor: true,\r\n  \r\n      /**\r\n       * The sidebar returns to its normal position if its width below this value.\r\n       * @type {Numeric}\r\n       */\r\n      minWidth: false\r\n    };\r\n  \r\n    // ---------------------------------\r\n    // # Class Definition\r\n    // ---------------------------------\r\n    //\r\n    /**\r\n     * Sticky Sidebar Class.\r\n     * @public\r\n     */\r\n    class StickySidebar{\r\n  \r\n      /**\r\n       * Sticky Sidebar Constructor.\r\n       * @constructor\r\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\r\n       * @param {Object} options - The options of sticky sidebar.\r\n       */\r\n      constructor(sidebar, options = {}){\r\n        this.options = StickySidebar.extend(DEFAULTS, options);\r\n  \r\n        // Sidebar element query if there's no one, throw error.\r\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\r\n        if( 'undefined' === typeof this.sidebar )\r\n          throw new Error(\"There is no specific sidebar element.\");\r\n  \r\n        this.sidebarInner = false;\r\n        this.container = this.sidebar.parentElement;\r\n  \r\n        // Current Affix Type of sidebar element.\r\n        this.affixedType = 'STATIC';\r\n        this.direction = 'down';\r\n        this.support = {\r\n          transform:   false,\r\n          transform3d: false\r\n        };\r\n  \r\n        this._initialized = false;\r\n        this._reStyle = false;\r\n        this._breakpoint = false;\r\n        this._resizeListeners = [];\r\n        \r\n        // Dimensions of sidebar, container and screen viewport.\r\n        this.dimensions = {\r\n          translateY: 0,\r\n          topSpacing: 0,\r\n          lastTopSpacing: 0,\r\n          bottomSpacing: 0,\r\n          lastBottomSpacing: 0,\r\n          sidebarHeight: 0,\r\n          sidebarWidth: 0,\r\n          containerTop: 0,\r\n          containerHeight: 0,\r\n          viewportHeight: 0,\r\n          viewportTop: 0, \r\n          lastViewportTop: 0,\r\n        };\r\n  \r\n        // Bind event handlers for referencability.\r\n        ['handleEvent'].forEach( (method) => {\r\n          this[method] = this[method].bind(this);\r\n        });\r\n  \r\n        // Initialize sticky sidebar for first time.\r\n        this.initialize();\r\n      }\r\n  \r\n      /**\r\n       * Initializes the sticky sidebar by adding inner wrapper, define its container, \r\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\r\n       * @private\r\n       */\r\n      initialize(){\r\n        this._setSupportFeatures();\r\n  \r\n        // Get sticky sidebar inner wrapper, if not found, will create one.\r\n        if( this.options.innerWrapperSelector ){\r\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\r\n  \r\n          if( null === this.sidebarInner )\r\n            this.sidebarInner = false;\r\n        }\r\n        \r\n        if( ! this.sidebarInner ){\r\n          let wrapper = document.createElement('div');\r\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\r\n          this.sidebar.appendChild(wrapper);\r\n  \r\n          while( this.sidebar.firstChild != wrapper )\r\n            wrapper.appendChild(this.sidebar.firstChild);\r\n  \r\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\r\n        }\r\n  \r\n        // Container wrapper of the sidebar.\r\n        if( this.options.containerSelector ){\r\n          let containers = document.querySelectorAll(this.options.containerSelector);\r\n          containers = Array.prototype.slice.call(containers);\r\n  \r\n          containers.forEach((container, item) => {\r\n            if( ! container.contains(this.sidebar) ) return;\r\n            this.container = container;\r\n          });\r\n  \r\n          if( ! containers.length )\r\n            throw new Error(\"The container does not contains on the sidebar.\");\r\n        }\r\n        \r\n        // If top/bottom spacing is not function parse value to integer.\r\n        if( 'function' !== typeof this.options.topSpacing )\r\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\r\n  \r\n        if( 'function' !== typeof this.options.bottomSpacing )\r\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\r\n            \r\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\r\n        this._widthBreakpoint();\r\n  \r\n        // Calculate dimensions of sidebar, container and viewport.\r\n        this.calcDimensions();\r\n  \r\n        // Affix sidebar in proper position.\r\n        this.stickyPosition();\r\n  \r\n        // Bind all events.\r\n        this.bindEvents();\r\n        \r\n        // Inform other properties the sticky sidebar is initialized.\r\n        this._initialized = true;\r\n      }\r\n  \r\n      /**\r\n       * Bind all events of sticky sidebar plugin.\r\n       * @protected\r\n       */\r\n      bindEvents(){\r\n        window.addEventListener('resize', this, {passive: true, capture: false});\r\n        window.addEventListener('scroll', this, {passive: true, capture: false});\r\n  \r\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          new ResizeSensor(this.sidebarInner, this.handleEvent);\r\n          new ResizeSensor(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Handles all events of the plugin.\r\n       * @param {Object} event - Event object passed from listener.\r\n       */\r\n      handleEvent(event){\r\n        this.updateSticky(event);\r\n      }\r\n  \r\n      /**\r\n       * Calculates dimensions of sidebar, container and screen viewpoint\r\n       * @public\r\n       */\r\n      calcDimensions(){\r\n        if( this._breakpoint ) return;\r\n        var dims = this.dimensions;\r\n  \r\n        // Container of sticky sidebar dimensions.\r\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\r\n        dims.containerHeight = this.container.clientHeight;\r\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\r\n  \r\n        // Sidebar dimensions.\r\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\r\n        dims.sidebarWidth  = this.sidebar.offsetWidth;\r\n        \r\n        // Screen viewport dimensions.\r\n        dims.viewportHeight = window.innerHeight;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n      }\r\n  \r\n      /**\r\n       * Some dimensions values need to be up-to-date when scrolling the page.\r\n       * @private\r\n       */\r\n      _calcDimensionsWithScroll(){\r\n        var dims = this.dimensions;\r\n  \r\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\r\n  \r\n        dims.viewportTop    = document.documentElement.scrollTop || document.body.scrollTop;\r\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\r\n        dims.viewportLeft   = document.documentElement.scrollLeft || document.body.scrollLeft;\r\n  \r\n        dims.topSpacing    = this.options.topSpacing;\r\n        dims.bottomSpacing = this.options.bottomSpacing;\r\n  \r\n        if( 'function' === typeof dims.topSpacing )\r\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\r\n  \r\n        if( 'function' === typeof dims.bottomSpacing )\r\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\r\n        \r\n        if( 'VIEWPORT-TOP' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease top spacing value.\r\n          if( dims.topSpacing < dims.lastTopSpacing ){\r\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\r\n            this._reStyle = true; \r\n          }\r\n        \r\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease bottom spacing value.\r\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\r\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\r\n            this._reStyle = true;\r\n          }\r\n        }\r\n        \r\n        dims.lastTopSpacing    = dims.topSpacing;\r\n        dims.lastBottomSpacing = dims.bottomSpacing;\r\n      }\r\n      \r\n      /**\r\n       * Determine whether the sidebar is bigger than viewport.\r\n       * @public\r\n       * @return {Boolean}\r\n       */\r\n      isSidebarFitsViewport(){\r\n        return this.dimensions.sidebarHeight < this.dimensions.viewportHeight;\r\n      }\r\n  \r\n      /**\r\n       * Observe browser scrolling direction top and down.\r\n       */\r\n      observeScrollDir(){\r\n        var dims = this.dimensions;\r\n        if( dims.lastViewportTop === dims.viewportTop ) return;\r\n  \r\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\r\n        \r\n        // If the browser is scrolling not in the same direction.\r\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\r\n          this.direction = 'down' === this.direction ?  'up' : 'down';\r\n      }\r\n  \r\n      /**\r\n       * Gets affix type of sidebar according to current scrollTop and scrollLeft.\r\n       * Holds all logical affix of the sidebar when scrolling up and down and when sidebar \r\n       * is bigger than viewport and vice versa.\r\n       * @public\r\n       * @return {String|False} - Proper affix type.\r\n       */\r\n      getAffixType(){\r\n        var dims = this.dimensions, affixType = false;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n  \r\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\r\n        var colliderTop = dims.viewportTop + dims.topSpacing;\r\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\r\n  \r\n        // When browser is scrolling top.\r\n        if( 'up' === this.direction ){\r\n          if( colliderTop <= dims.containerTop ){\r\n            dims.translateY = 0;\r\n            affixType = 'STATIC';\r\n  \r\n          } else if( colliderTop <= dims.translateY + dims.containerTop ){\r\n            dims.translateY = colliderTop - dims.containerTop;\r\n            affixType = 'VIEWPORT-TOP';\r\n  \r\n          } else if( ! this.isSidebarFitsViewport() && dims.containerTop <= colliderTop ){\r\n            affixType = 'VIEWPORT-UNBOTTOM';\r\n          }\r\n        // When browser is scrolling up.\r\n        } else {\r\n          // When sidebar element is not bigger than screen viewport.\r\n          if( this.isSidebarFitsViewport() ){\r\n  \r\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom;\r\n              affixType = 'CONTAINER-BOTTOM'; \r\n  \r\n            } else if( colliderTop >= dims.containerTop ){\r\n              dims.translateY = colliderTop - dims.containerTop;\r\n              affixType = 'VIEWPORT-TOP';\r\n            }\r\n          // When sidebar element is bigger than screen viewport.\r\n          } else {\r\n      \r\n            if( dims.containerBottom <= colliderBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom; \r\n              affixType = 'CONTAINER-BOTTOM';    \r\n  \r\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\r\n              dims.translateY = colliderBottom - sidebarBottom;\r\n              affixType = 'VIEWPORT-BOTTOM';\r\n            \r\n            } else if( dims.containerTop + dims.translateY <= colliderTop ){\r\n              affixType = 'VIEWPORT-UNBOTTOM';\r\n            }\r\n          }\r\n        }\r\n  \r\n        // Make sure the translate Y is not bigger than container height.\r\n        dims.translateY = Math.max(0, dims.translateY);\r\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\r\n  \r\n        dims.lastViewportTop = dims.viewportTop;\r\n        return affixType;\r\n      }\r\n  \r\n      /**\r\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according \r\n       * to its affix type.\r\n       * @private\r\n       * @param {String} affixType - Affix type of sticky sidebar.\r\n       * @return {Object}\r\n       */\r\n      _getStyle(affixType){\r\n        if( 'undefined' === typeof affixType ) return;\r\n  \r\n        var style = {inner: {}, outer: {}};\r\n        var dims = this.dimensions;\r\n  \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n            style.inner = {position: 'fixed', top: dims.topSpacing,\r\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\r\n            break;\r\n          case 'VIEWPORT-BOTTOM':\r\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\r\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\r\n            break;\r\n          case 'CONTAINER-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n            let translate = this._getTranslate(0, dims.translateY + 'px');\r\n            \r\n            if( translate )\r\n              style.inner = {transform: translate};\r\n            else \r\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\r\n            break;\r\n        }\r\n        \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n          case 'VIEWPORT-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n          case 'CONTAINER-BOTTOM':\r\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\r\n            break;\r\n        }\r\n  \r\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\r\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\r\n            bottom: '', width: '',  transform: this._getTranslate()}, style.inner);\r\n  \r\n        return style;\r\n      }\r\n     \r\n      /**\r\n       * Cause the sidebar to be sticky according to affix type by adding inline\r\n       * style, adding helper class and trigger events.\r\n       * @function\r\n       * @protected\r\n       * @param {string} force - Update sticky sidebar position by force.\r\n       */\r\n      stickyPosition(force){\r\n        if( this._breakpoint ) return;\r\n  \r\n        force = this._reStyle || force || false;\r\n        \r\n        var offsetTop = this.options.topSpacing;\r\n        var offsetBottom = this.options.bottomSpacing;\r\n  \r\n        var affixType = this.getAffixType();\r\n        var style = this._getStyle(affixType);\r\n        \r\n        if( (this.affixedType != affixType || force) && affixType ){\r\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\r\n  \r\n          if( 'STATIC' === affixType )\r\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          else\r\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\r\n          \r\n          for( let key in style.outer ){\r\n            let _unit = ('number' === typeof style.outer[key]) ? 'px' : '';\r\n            this.sidebar.style[key] = style.outer[key];\r\n          }\r\n  \r\n          for( let key in style.inner ){\r\n            let _unit = ('number' === typeof style.inner[key]) ? 'px' : '';\r\n            this.sidebarInner.style[key] = style.inner[key] + _unit;\r\n          }\r\n          \r\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\r\n        } else {\r\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\r\n        }\r\n  \r\n        this.affixedType = affixType;\r\n      }\r\n  \r\n      /**\r\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\r\n       * @protected\r\n       */\r\n      _widthBreakpoint(){\r\n  \r\n        if( window.innerWidth <= this.options.minWidth ){\r\n          this._breakpoint = true;\r\n          this.affixedType = 'STATIC';\r\n  \r\n          this.sidebar.removeAttribute('style');\r\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          this.sidebarInner.removeAttribute('style');\r\n        } else {\r\n          this._breakpoint = false;\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Switches between functions stack for each event type, if there's no \r\n       * event, it will re-initialize sticky sidebar.\r\n       * @public\r\n       */\r\n      updateSticky(event = {}){\r\n        if( this._running ) return;\r\n        this._running = true;\r\n  \r\n        ((eventType) => {\r\n\r\n          requestAnimationFrame(() => {\r\n            switch( eventType ){\r\n              // When browser is scrolling and re-calculate just dimensions\r\n              // within scroll. \r\n              case 'scroll':\r\n                this._calcDimensionsWithScroll();\r\n                this.observeScrollDir();\r\n                this.stickyPosition();\r\n                break;\r\n  \r\n              // When browser is resizing or there's no event, observe width\r\n              // breakpoint and re-calculate dimensions.\r\n              case 'resize':\r\n              default: \r\n                this._widthBreakpoint();\r\n                this.calcDimensions();\r\n                this.stickyPosition(true);\r\n                break;\r\n            }\r\n            this._running = false;\r\n          });\r\n        })(event.type);\r\n      }\r\n  \r\n      /**\r\n       * Set browser support features to the public property.\r\n       * @private\r\n       */\r\n      _setSupportFeatures(){\r\n        var support = this.support;\r\n  \r\n        support.transform = StickySidebar.supportTransform();\r\n        support.transform3d = StickySidebar.supportTransform(true);\r\n      }\r\n  \r\n      /**\r\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\r\n       * and the same with translate. if browser doesn't support both return false.\r\n       * @param {Number} y - Value of Y-axis.\r\n       * @param {Number} x - Value of X-axis.\r\n       * @param {Number} z - Value of Z-axis.\r\n       * @return {String|False}\r\n       */\r\n      _getTranslate(y = 0, x = 0, z = 0){\r\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\r\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\r\n        else return false;\r\n      }\r\n  \r\n      /**\r\n       * Destroy sticky sidebar plugin.\r\n       * @public\r\n       */\r\n      destroy(){\r\n        window.removeEventListener('resize', this, {caption: false});\r\n        window.removeEventListener('scroll', this, {caption: false});\r\n  \r\n        this.sidebar.classList.remove(this.options.stickyClass);\r\n        this.sidebar.style.minHeight = '';\r\n  \r\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\r\n  \r\n        var styleReset = {inner: {}, outer: {}};\r\n  \r\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\r\n        styleReset.outer = {height: '', position: ''};\r\n  \r\n        for( let key in styleReset.outer )\r\n          this.sidebar.style[key] = styleReset.outer[key];\r\n  \r\n        for( let key in styleReset.inner )\r\n          this.sidebarInner.style[key] = styleReset.inner[key];\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\r\n          ResizeSensor.detach(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Determine if the browser supports CSS transform feature.\r\n       * @function\r\n       * @static\r\n       * @param {Boolean} transform3d - Detect transform with translate3d.\r\n       * @return {String}\r\n       */\r\n      static supportTransform(transform3d){\r\n        var result = false,\r\n            property = (transform3d) ? 'perspective' : 'transform',\r\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\r\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\r\n            support = document.createElement('support'),\r\n            style = support.style;\r\n  \r\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\r\n          if (style[property] !== undefined) {\r\n            result = property;\r\n            return false;\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Trigger custom event.\r\n       * @static\r\n       * @param {DOMObject} element - Target element on the DOM.\r\n       * @param {String} eventName - Event name.\r\n       * @param {Object} data - \r\n       */\r\n      static eventTrigger(element, eventName, data){\r\n        try{\r\n          var event = new CustomEvent(eventName, {detail: data});\r\n        } catch(e){\r\n          var event = document.createEvent('CustomEvent');\r\n          event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        element.dispatchEvent(event);\r\n      }\r\n  \r\n      /**\r\n       * Extend options object with defaults.\r\n       * @function\r\n       * @static\r\n       */\r\n      static extend(defaults, options){\r\n        var results = {};\r\n        for( let key in defaults ){\r\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\r\n          else results[key] = defaults[key];\r\n        }\r\n        return results;\r\n      }\r\n  \r\n      /**\r\n       * Get current coordinates left and top of specific element.\r\n       * @static\r\n       */\r\n      static offsetRelative(element){\r\n        var result = {left: 0, top: 0};\r\n\r\n        do{\r\n          let offsetTop = element.offsetTop;\r\n          let offsetLeft = element.offsetLeft;\r\n  \r\n          if( ! isNaN(offsetTop) )\r\n            result.top += offsetTop;\r\n  \r\n          if( ! isNaN(offsetLeft) )\r\n            result.left += offsetLeft;\r\n\r\n          element = ( 'BODY' === element.tagName ) ?\r\n                      element.parentElement : element.offsetParent;\r\n        } while(element)\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Add specific class name to specific element.\r\n       * @static \r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static addClass(element, className){\r\n        if( ! StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.add(className);\r\n          else\r\n            element.className += ' ' + className;\r\n        }\r\n      }\r\n      \r\n      /**\r\n       * Remove specific class name to specific element\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static removeClass(element, className){\r\n        if( StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.remove(className);\r\n          else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Determine weather the element has specific class name.\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static hasClass(element, className){\r\n        if (element.classList)\r\n          return element.classList.contains(className);\r\n        else\r\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n      }\r\n    }\r\n  \r\n    return StickySidebar;\r\n  })();\r\n  \r\n  export default StickySidebar;\r\n  \r\n  // Global\r\n  // -------------------------\r\n  window.StickySidebar = StickySidebar;","import StickySidebar from \"sticky-sidebar\";\n\nimport { default as $ } from \"./lib/jQuery\";\n\n$(document).ready(() => {\n  initializeStickySidebar();\n});\n\nfunction initializeStickySidebar() {\n  // Needs hierarchy: .sidenav-container > .sidenav > .sidebar__inner.sgds-menu\n  let sideNavContainer = document.querySelector(\".sidenav-container\");\n  if (sideNavContainer) {\n    let sideNavMain = sideNavContainer.querySelector(\".sidenav\");\n    if (sideNavMain) {\n      let sideNavMenuList = sideNavMain.querySelector(\n        \".sidebar__inner.sgds-menu\"\n      );\n      if (sideNavMenuList) {\n        new StickySidebar(\".sidenav\", {\n          containerSelector: \".sidenav-container\",\n          innerWrapperSelector: \".sidebar__inner\",\n          topSpacing: parseInt(sideNavMain.dataset.topspacing),\n          bottomSpacing: parseInt(sideNavMain.dataset.bottomspacing)\n        });\n      }\n    }\n  }\n}\n"],"sourceRoot":""}